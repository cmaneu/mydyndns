name: Docker publish ARM
 
on:
  push:
    paths:
    - '.github/workflows/docker-publish-arm.yml'
env:
  IMAGE_NAME: mydyndns-client

jobs:
  build-n-publish:
    runs-on: ubuntu-latest
 
    steps:
    - name: Checkout
      uses: actions/checkout@v1
 
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
          install: true

    - name: Available platforms
      run: |
        echo ${{ steps.buildx.outputs.platforms }}

    - name: Build image (ARM32)
      run: docker build . --load --file "MyDynDns.Client/Dockerfile.arm32" --tag $IMAGE_NAME-arm32

    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Push image (ARM32)
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME-arm32

        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID-arm32 | tr '[A-Z]' '[a-z]')

        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest

        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION  
 
    - name: Docker logout
      run: docker logout